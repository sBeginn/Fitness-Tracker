import streamlit as stimport cv2import pandas as pdimport matplotlib.pyplot as plt# Titel deiner Anwendungst.title('Fitnessübungen mit Streamlit')# Benutzerfreundliche Meldungenst.write("Wähle eine Übung aus und entscheide, ob du sie live mit der Webcam durchführen oder ein Video hochladen möchtest.")# Übungen verwaltenexercises = {    'Übung 1': 'Hier kommt die Beschreibung für Übung 1.',    'Übung 2': 'Hier kommt die Beschreibung für Übung 2.',    'Übung 3': 'Hier kommt die Beschreibung für Übung 3.'}selected_exercise = st.selectbox('Übung auswählen', list(exercises.keys()))# Option zur Auswahl von Webcam oder Videolive_or_video = st.radio('Live mit Webcam oder Video', ['Webcam', 'Video'])# Datenframe zur Verfolgung der Leistungperformance_data = pd.DataFrame(columns=['Übung', 'Dauer (s)', 'Wiederholungen'])# Webcam-Integrationif live_or_video == 'Webcam':    st.write('Du hast "Webcam" ausgewählt. Bitte erlaube den Zugriff auf deine Webcam.')    # Video-Stream von der Webcam anzeigen    cap = cv2.VideoCapture(0)    if st.button('Starte die Übung'):        st.session_state.time = st.session_state.time or st.empty()        st.session_state.time.empty()        st.write(f'Du führst jetzt die Übung "{selected_exercise}" live mit der Webcam durch.')        st.write('Stoppe die Übung, wenn du fertig bist.')        start_time = st.session_state.time.time()        repetitions = 0        while True:            ret, frame = cap.read()            if not ret:                break            st.image(frame, channels='BGR')            if st.button('Fertig'):                end_time = st.session_state.time.time()                duration = (end_time - start_time).total_seconds()                repetitions += 1                st.write(f'Dauer der letzten Wiederholung: {duration:.2f} s')                st.write(f'Gesamtanzahl der Wiederholungen: {repetitions}')                performance_data = performance_data.append({'Übung': selected_exercise, 'Dauer (s)': duration, 'Wiederholungen': repetitions}, ignore_index=True)                st.write('Leistungsdaten:')                st.write(performance_data)                start_time = st.session_state.time.time()        cap.release()# Video-Upload-Optionelif live_or_video == 'Video':    st.write('Du hast "Video" ausgewählt. Bitte lade ein Video im MP4- oder AVI-Format hoch.')    # Video-Upload    uploaded_file = st.file_uploader('Video auswählen', type=['mp4', 'avi'])    if uploaded_file is not None:        st.write(f'Du führst jetzt die Übung "{selected_exercise}" mit dem hochgeladenen Video durch.')        st.video(uploaded_file)# Übungsbeschreibung anzeigenif selected_exercise in exercises:    st.write(f'**Übungsbeschreibung für "{selected_exercise}":**')    st.write(exercises[selected_exercise])# Fortschrittsdiagramm anzeigenif not performance_data.empty:    st.write('**Fortschrittsdiagramm**')    fig, ax = plt.subplots()    for exercise, data in performance_data.groupby('Übung'):        ax.plot(data.index, data['Dauer (s)'], marker='o', label=exercise)    ax.set_xlabel('Durchlauf')    ax.set_ylabel('Dauer (s)')    ax.set_title('Leistungsfortschritt')    ax.legend()    st.pyplot(fig)